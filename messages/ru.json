{
  "Header": {
    "signIn": "Войти",
    "signUp": "Зарегистрироваться",
    "signOut": "Выйти"
  },
  "Welcome": {
    "welcome": "Добро пожаловать!",
    "welcomeBack": "Добро пожаловать, {name}!",
    "user": "Пользователь",
    "restClient": "REST Клиент",
    "history": "История",
    "variables": "Переменные"
  },
  "AboutRSS": {
    "title": "Создано как финальный проект для The Rolling Scopes School",
    "description": "RS School — бесплатная и основанная на сообществе онлайн-образовательная программа, проводимая The Rolling Scopes Community с 2013 года. В настоящее время более 500 разработчиков из разных стран и компаний участвуют в образовательном процессе как наставники."
  },
  "AboutUs": {
    "title": "Познакомьтесь с нашей командой",
    "description": "Познакомьтесь с людьми, которые стоят за этим проектом, и их ролями.",
    "team": {
      "galya": {
        "alt": "Галина",
        "name": "Галина Б.",
        "role": "Frontend Developer",
        "description": "Разработчик, ответственный за внедрение аутентификации Firebase, функционала Sign In/Sign Up и интеграцию многоязычной поддержки (i18n), что обеспечило бесшовный вход пользователей, управление токенами и локализацию для разнообразной аудитории."
      },
      "tonya": {
        "alt": "Антонина",
        "name": "Антонина Т.",
        "role": "Frontend Developer",
        "description": "Разработчик, ответственный за клиент RESTful, создавший функциональный редактор для составления и форматирования API-запросов, обработки тел запросов и кодирования данных."
      },
      "tatiana": {
        "alt": "Татьяна",
        "name": "Татьяна Д.",
        "role": "Frontend Developer",
        "description": "Разработчик, ответственный за маршруты Истории и Переменные, обеспечивший возможность пользователям просматривать и восстанавливать предыдущие запросы, управлять переменными и обновлять локальное хранилище для бесшовного клиентского опыта RESTful."
      }
    }
  },
  "Auth": {
    "signUp": "Зарегистрироваться",
    "signIn": "Войти",
    "namePlaceholder": "Имя*",
    "emailPlaceholder": "Электронная почта*",
    "passwordPlaceholder": "Пароль*",
    "submit": "Отправить",
    "errors": {
      "emailAlreadyRegistered": "Этот email уже зарегистрирован",
      "invalidCredentials": "Неверный email или пароль",
      "unknown": "Произошла неизвестная ошибка при аутентификации",
      "invalidEmailFormat": "Неверный формат электронной почты",
      "emailRequired": "Email обязателен",
      "passwordMinLength": "Не менее 8 символов",
      "passwordAtLeastOneNumber": "Хотя бы одну цифру",
      "passwordAtLeastOneUppercaseLetter": "Хотя бы одну заглавную букву",
      "passwordAtLeastOneLowercaseLetter": "Хотя бы одну строчную букву",
      "passwordAtLeastOneSpecialCharacter": "Хотя бы один специальный символ",
      "passwordRequired": "Пароль обязателен",
      "nameStartsWithUppercase": "Имя должно начинаться с заглавной буквы",
      "nameRequired": "Имя обязательно"
    }
  },
  "RESTful": {
    "send": "Отправить",
    "history": "History",
    "query": "Параметры",
    "headers": "Заголовки",
    "body": "Тело",
    "add": "Добавить",
    "text": "Текст",
    "prettify": "Форматировать",
    "key": "ключ",
    "value": "значение",
    "Invalid Syntax": "Ошибка форматирования",
    "JSON prettified successfully": "JSON успешно отформатирован",
    "JSON is already prettified": "JSON уже отформатирован",
    "Prettify is only available for JSON": "Форматирование доступно только для JSON",
    "Request Failed": "Запрос не выполнен",
    "Request successful!": "Запрос выполнен успешно!",
    "Error of decoding of URL from path": "Ошибка декодирования URL из path",
    "Eror of decoding Body from path": "Ошибка декодирования Body из path",
    "providingURL": "// Введите URL для генерации кода",
    "generatingCodeFor": "// Генерация кода для",
    "The API returned an empty code snippet": "API вернул пустой фрагмент кода",
    "Code generation error": "Ошибка при генерации кода",
    "errorGeneration": "// Ошибка при генерации кода",
    "Code copied!": "Код скопирован!",
    "Error:": "Ошибка:",
    "Code Snippet": "Фрагмент кода",
    "variables": "Переменные",
    "variablesError": "// Ошибка подстановки переменных"
  },
  "VariablesList": {
    "title": "Переменные",
    "keyLabel": "Ключ",
    "valueLabel": "Значение",
    "keyPlaceholder": "Введите ключ",
    "valuePlaceholder": "Введите значение",
    "addButton": "Добавить переменную",
    "copyTooltip": "Кликните для копирования",
    "copiedText": "Скопировано!",
    "deleteAriaLabel": "Удалить переменную",
    "error": {
      "keyExists": "Переменная с ключом {key} уже существует"
    },
    "success": {
      "added": "Переменная {key} добавлена",
      "updated": "Переменная {key} обновлена",
      "deleted": "Переменная {key} удалена"
    }
  },
  "HistoryList": {
    "title": "История запросов",
    "clearButton": "Очистить историю",
    "emptyTitle": "Вы еще не выполняли запросов",
    "emptyDescription": "Здесь пока пусто. Попробуйте:",
    "goToClientButton": "Перейти в REST клиент",
    "methodLabel": "Метод",
    "urlLabel": "URL",
    "timeLabel": "Время",
    "bodyTypeLabel": "Тип тела",
    "copyLinkTooltip": "Копировать ссылку запроса",
    "error": {
      "clearFailed": "Не удалось очистить историю",
      "deleteFailed": "Запрос не удален"
    },
    "success": {
      "cleared": "История успешно очищена",
      "deleted": "Запрос удален"
    }
  }
}
